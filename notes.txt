<draw:enhanced-geometry 
    draw:enhanced-path="M ?f0 0 L 21600 21600 0 21600 Z N"
    draw:glue-points="?f0 0 ?f1 10800 0 21600 10800 21600 216
    00 21600 ?f7 10800" 
    draw:modifiers="10800"                                                         This list will be $0, $1, ...
    draw:text-areas="?f1 10800 ?f2 18000 ?f3 7200 ?f4 21600" 
    draw:type="isosceles-triangle" 
    svg:viewbox="0 0 21600 21600">

    <draw:equation draw:formula="$0 " draw:name="f0"></draw:equation>
    <draw:equation draw:formula="$0 /2" draw:name="f1"></draw:equation>             For text area
    <draw:equation draw:formula="?f1 +10800" draw:name="f2"></draw:equation>        For text area
    <draw:equation draw:formula="$0 *2/3" draw:name="f3"></draw:equation>           For text area
    <draw:equation draw:formula="?f3 +7200" draw:name="f4"></draw:equation>         For text area
    <draw:equation draw:formula="21600-?f0" draw:name="f5"></draw:equation>
    <draw:equation draw:formula="?f5 /2" draw:name="f6"></draw:equation>
    <draw:equation draw:formula="21600-?f6 " draw:name="f7"></draw:equation>
    <draw:handle draw:handle-position="$0 top" draw:handle-range-x-maximum="21600" draw:handle-range-x-minimum="0"></draw:handle></draw:enhanced-geometry>

1) Parse modifiers into list m[$0, $1, ...]
2) Evaluate equations in order, storing results in list e[f0, f1, ...]
    - references to $i get substituted by m[i]
    - references to fn get substituted by e[n]
3) Replace any ?fn in enhanced path with e[n]

Circle less wedge:
<draw:custom-shape draw:layer="layout" draw:style-name="gr4" draw:text-style-name="P1" svg:height="4.2cm" svg:width="4.2cm" svg:x="12.2cm" svg:y="11.4cm">
<text:p></text:p>
<draw:enhanced-geometry 
    draw:enhanced-path="V 0 0 21600 21600 ?f5 ?f7 ?f1 ?f3 L 10800 10800 Z N"
    draw:glue-point-type="segments"
    draw:modifiers="-122.43640282064 0"
    draw:type="mso-spt100">
    <draw:equation draw:formula="10800*cos($0 *(pi/180))" draw:name="f0"></draw:equation>
    <draw:equation draw:formula="?f0 +10800" draw:name="f1"></draw:equation>
    <draw:equation draw:formula="10800*sin($0 *(pi/180))" draw:name="f2"></draw:equation>
    <draw:equation draw:formula="?f2 +10800" draw:name="f3"></draw:equation>
    <draw:equation draw:formula="10800*cos($1 *(pi/180))" draw:name="f4"></draw:equation>
    <draw:equation draw:formula="?f4 +10800" draw:name="f5"></draw:equation>
    <draw:equation draw:formula="10800*sin($1 *(pi/180))" draw:name="f6"></draw:equation>
    <draw:equation draw:formula="?f6 +10800" draw:name="f7"></draw:equation>
    <draw:handle draw:handle-polar="10800 10800" draw:handle-position="10800 $0" draw:handle-radius-range-maximum="10800" draw:handle-radius-range-minimum="10800"></draw:handle>
    <draw:handle draw:handle-polar="10800 10800" draw:handle-position="10800 $1" draw:handle-radius-range-maximum="10800" draw:handle-radius-range-minimum="10800"></draw:handle>
</draw:enhanced-geometry></draw:custom-shape>


Possible functions in formulae:
if(c,x,y)
	conditional testing: if c is greater than zero then the result of evaluating x is returned, otherwise the result of evaluating y is returned. 